name: Build project

on:
  push:
    branches:
      - master
  pull_request: {}
  workflow_dispatch: {}

jobs:
  # Checks Unity license.
  checklicense:
    name: Check for UNITY_LICENSE in GitHub Secrets
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether Unity activation should be done
        id: checklicense_job
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        run: |
          if [[ -n "${UNITY_LICENSE}" ]]; then
            echo "is_unity_license_set=true" >> $GITHUB_OUTPUT
          else
            echo "is_unity_license_set=false" >> $GITHUB_OUTPUT
          fi

  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    needs: checklicense
    if: needs.checklicense.outputs.is_unity_license_set == 'true' 
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
    steps:
      # Checkout.
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      # Cache Unity Library folder.
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-

      # Build project.
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}

      # Upload artifacts.
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
