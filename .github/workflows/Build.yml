name: Build project

on:
  push:
    branches:
      - master
  pull_request: {}
  workflow_dispatch: {}

jobs:
  checklicense:
    name: Check for UNITY_LICENSE
    runs-on: ubuntu-latest
    outputs:
      is_unity_license_set: ${{ steps.checklicense_job.outputs.is_unity_license_set }}
    steps:
      - name: Check whether Unity activation should be done
        id: checklicense_job
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        run: |
          if [[ -n "${UNITY_LICENSE}" ]]; then
            echo "is_unity_license_set=true" >> $GITHUB_OUTPUT
          else
            echo "is_unity_license_set=false" >> $GITHUB_OUTPUT
          fi

  test:
    name: Run Unity Tests
    needs: checklicense
    if: needs.checklicense.outputs.is_unity_license_set == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          lfs: true

      - name: Run Unity Tests
        uses: game-ci/unity-test-runner@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          customParameters: -nographics
          customScript: |
            apt-get update
            apt-get install -y libgdal-dev

      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: TestResults
          path: artifacts

  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    needs: [checklicense, test]
    if: needs.checklicense.outputs.is_unity_license_set == 'true' 
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - StandaloneWindows64
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true

      - name: Cache Unity Library
        uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}-${{ hashFiles('**/ProjectSettings/ProjectVersion.txt') }}
          restore-keys: |
            Library-${{ matrix.targetPlatform }}-
            Library-
      
      - name: Build project
        uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          customParameters: -nographics
          customScript: |
            apt-get update
            apt-get install -y libgdal-dev

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}
